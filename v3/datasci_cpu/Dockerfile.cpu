# Multi-stage build for smaller final image
FROM python:3.9-slim as builder

# Install build dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    git \
    libgomp1 \
    curl \
    && curl -fsSL https://deb.nodesource.com/setup_18.x | bash - \
    && apt-get install -y nodejs \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Create and activate virtual environment
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Copy and install requirements with specific versions
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt && \
    jupyter server extension enable --py jupyterlab_git && \
    jupyter lab build && \
    rm -rf ~/.cache/pip ~/.cache/yarn

# Final stage
FROM python:3.9-slim

# Copy virtual environment from builder
COPY --from=builder /opt/venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Install runtime dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    git \
    libgomp1 \
    curl \
    && curl -fsSL https://deb.nodesource.com/setup_18.x | bash - \
    && apt-get install -y nodejs \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Set up workspace and Git configuration
WORKDIR /workspace
VOLUME ["/workspace"]
RUN git config --system safe.directory '*' && \
    git config --system safe.directory /workspace

# Copy recommended extensions list
COPY recommended_extensions.txt /opt/

# Configure JupyterLab
RUN mkdir -p /root/.jupyter && \
    jupyter server extension enable --py jupyterlab_git && \
    jupyter lab build

# Expose port
EXPOSE 8888

# Start JupyterLab
CMD ["jupyter", "lab", "--ip=0.0.0.0", "--port=8888", "--no-browser", "--allow-root"] 